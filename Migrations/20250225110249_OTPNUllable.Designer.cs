// <auto-generated />
using System;
using ChangePond_Visitors_Backend_Application.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChangePond_Visitors_Backend_Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250225110249_OTPNUllable")]
    partial class OTPNUllable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.CheckInOutLog", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VisitorID")
                        .HasColumnType("int");

                    b.HasKey("LogID");

                    b.HasIndex("VisitorID");

                    b.ToTable("CheckInOutLogs");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.Host", b =>
                {
                    b.Property<int>("HostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("HostID");

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HostID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("VisitorID")
                        .HasColumnType("int");

                    b.HasKey("NotificationID");

                    b.HasIndex("HostID");

                    b.HasIndex("VisitorID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.SecurityVerification", b =>
                {
                    b.Property<int>("VerificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IDProof")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OTP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("OTPVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VisitorID")
                        .HasColumnType("int");

                    b.HasKey("VerificationID");

                    b.HasIndex("VisitorID");

                    b.ToTable("SecurityVerifications");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.Visitor", b =>
                {
                    b.Property<int>("VisitorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HostID")
                        .HasColumnType("int");

                    b.Property<string>("IDProof")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OTP")
                        .HasColumnType("longtext");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VisitorID");

                    b.HasIndex("HostID");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.CheckInOutLog", b =>
                {
                    b.HasOne("ChangePond_Visitors_Backend_Application.Entities.Visitor", "Visitor")
                        .WithMany("CheckInOutLogs")
                        .HasForeignKey("VisitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.Notification", b =>
                {
                    b.HasOne("ChangePond_Visitors_Backend_Application.Entities.Host", "Host")
                        .WithMany()
                        .HasForeignKey("HostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChangePond_Visitors_Backend_Application.Entities.Visitor", "Visitor")
                        .WithMany()
                        .HasForeignKey("VisitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Host");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.SecurityVerification", b =>
                {
                    b.HasOne("ChangePond_Visitors_Backend_Application.Entities.Visitor", "Visitor")
                        .WithMany()
                        .HasForeignKey("VisitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.Visitor", b =>
                {
                    b.HasOne("ChangePond_Visitors_Backend_Application.Entities.Host", "Host")
                        .WithMany("Visitors")
                        .HasForeignKey("HostID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Host");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.Host", b =>
                {
                    b.Navigation("Visitors");
                });

            modelBuilder.Entity("ChangePond_Visitors_Backend_Application.Entities.Visitor", b =>
                {
                    b.Navigation("CheckInOutLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
